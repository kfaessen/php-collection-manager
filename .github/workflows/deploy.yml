name: Deploy Collection Manager

on:
  push:
    branches: [ main, master, develop, feature/* ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: collection_manager_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, openssl, tokenizer, json, bcmath, fileinfo
        coverage: none

    - name: Create .env file
      run: |
        cat > .env << 'EOF'
        APP_NAME="Collection Manager"
        APP_ENV=testing
        APP_KEY=
        APP_DEBUG=true
        APP_URL=http://localhost
        LOG_CHANNEL=stack
        LOG_DEPRECATIONS_CHANNEL=null
        LOG_LEVEL=debug
        DB_CONNECTION=mysql
        DB_HOST=127.0.0.1
        DB_PORT=3306
        DB_DATABASE=collection_manager_test
        DB_USERNAME=root
        DB_PASSWORD=password
        BROADCAST_DRIVER=log
        CACHE_DRIVER=file
        FILESYSTEM_DISK=local
        QUEUE_CONNECTION=sync
        SESSION_DRIVER=file
        SESSION_LIFETIME=120
        MEMCACHED_HOST=127.0.0.1
        REDIS_HOST=127.0.0.1
        REDIS_PASSWORD=null
        REDIS_PORT=6379
        MAIL_MAILER=smtp
        MAIL_HOST=mailpit
        MAIL_PORT=1025
        MAIL_USERNAME=null
        MAIL_PASSWORD=null
        MAIL_ENCRYPTION=null
        MAIL_FROM_ADDRESS="hello@example.com"
        MAIL_FROM_NAME="${APP_NAME}"
        VITE_APP_NAME="${APP_NAME}"
        EOF

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run tests
      run: php artisan test

  deploy-development:
    needs: test
    runs-on: ubuntu-latest
    environment: development
    if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/feature/extending_main_functionality') && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, openssl, tokenizer, json, bcmath, fileinfo
        coverage: none

    - name: Create .env file for development
      run: |
        cat > .env << 'EOF'
        APP_NAME="Collection Manager - Development"
        APP_ENV=development
        APP_KEY=
        APP_DEBUG=true
        APP_URL=http://localhost
        LOG_CHANNEL=stack
        LOG_DEPRECATIONS_CHANNEL=null
        LOG_LEVEL=debug
        DB_CONNECTION=mysql
        DB_HOST=${{ secrets.SSH_HOST }}
        DB_PORT=3306
        DB_DATABASE=collection_manager_dev
        DB_USERNAME=${{ secrets.SSH_USER }}
        DB_PASSWORD=password
        BROADCAST_DRIVER=log
        CACHE_DRIVER=file
        FILESYSTEM_DISK=local
        QUEUE_CONNECTION=sync
        SESSION_DRIVER=file
        SESSION_LIFETIME=120
        MEMCACHED_HOST=127.0.0.1
        REDIS_HOST=127.0.0.1
        REDIS_PASSWORD=null
        REDIS_PORT=6379
        MAIL_MAILER=smtp
        MAIL_HOST=mailpit
        MAIL_PORT=1025
        MAIL_USERNAME=null
        MAIL_PASSWORD=null
        MAIL_ENCRYPTION=null
        MAIL_FROM_ADDRESS="dev@example.com"
        MAIL_FROM_NAME="${APP_NAME}"
        VITE_APP_NAME="${APP_NAME}"
        EOF

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Deploy to Development
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Starting Development Deployment..."
          cd ${{ secrets.DEPLOY_PATH }}/development
          git pull origin feature/extending_main_functionality
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan optimize
          chmod -R 755 storage bootstrap/cache
          chmod -R 775 storage/logs
          chmod -R 775 storage/framework/cache
          chmod -R 775 storage/framework/sessions
          chmod -R 775 storage/framework/views
          php artisan storage:link
          echo "Development deployment completed successfully!"

  deploy-test:
    needs: test
    runs-on: ubuntu-latest
    environment: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, openssl, tokenizer, json, bcmath, fileinfo
        coverage: none

    - name: Create .env file for test
      run: |
        cat > .env << 'EOF'
        APP_NAME="Collection Manager - Test"
        APP_ENV=testing
        APP_KEY=
        APP_DEBUG=false
        APP_URL=http://localhost
        LOG_CHANNEL=stack
        LOG_DEPRECATIONS_CHANNEL=null
        LOG_LEVEL=debug
        DB_CONNECTION=mysql
        DB_HOST=${{ secrets.SSH_HOST }}
        DB_PORT=3306
        DB_DATABASE=collection_manager_test
        DB_USERNAME=${{ secrets.SSH_USER }}
        DB_PASSWORD=password
        BROADCAST_DRIVER=log
        CACHE_DRIVER=file
        FILESYSTEM_DISK=local
        QUEUE_CONNECTION=sync
        SESSION_DRIVER=file
        SESSION_LIFETIME=120
        MEMCACHED_HOST=127.0.0.1
        REDIS_HOST=127.0.0.1
        REDIS_PASSWORD=null
        REDIS_PORT=6379
        MAIL_MAILER=smtp
        MAIL_HOST=mailpit
        MAIL_PORT=1025
        MAIL_USERNAME=null
        MAIL_PASSWORD=null
        MAIL_ENCRYPTION=null
        MAIL_FROM_ADDRESS="test@example.com"
        MAIL_FROM_NAME="${APP_NAME}"
        VITE_APP_NAME="${APP_NAME}"
        EOF

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Deploy to Test
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Starting Test Deployment..."
          cd ${{ secrets.DEPLOY_PATH }}/test
          git pull origin main
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan optimize
          chmod -R 755 storage bootstrap/cache
          chmod -R 775 storage/logs
          chmod -R 775 storage/framework/cache
          chmod -R 775 storage/framework/sessions
          chmod -R 775 storage/framework/views
          php artisan storage:link
          echo "Test deployment completed successfully!"

  deploy-acceptance:
    needs: test
    runs-on: ubuntu-latest
    environment: acceptance
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, openssl, tokenizer, json, bcmath, fileinfo
        coverage: none

    - name: Create .env file for acceptance
      run: |
        cat > .env << 'EOF'
        APP_NAME="Collection Manager - Acceptance"
        APP_ENV=acceptance
        APP_KEY=
        APP_DEBUG=false
        APP_URL=http://localhost
        LOG_CHANNEL=stack
        LOG_DEPRECATIONS_CHANNEL=null
        LOG_LEVEL=debug
        DB_CONNECTION=mysql
        DB_HOST=${{ secrets.SSH_HOST }}
        DB_PORT=3306
        DB_DATABASE=collection_manager_acceptance
        DB_USERNAME=${{ secrets.SSH_USER }}
        DB_PASSWORD=password
        BROADCAST_DRIVER=log
        CACHE_DRIVER=file
        FILESYSTEM_DISK=local
        QUEUE_CONNECTION=sync
        SESSION_DRIVER=file
        SESSION_LIFETIME=120
        MEMCACHED_HOST=127.0.0.1
        REDIS_HOST=127.0.0.1
        REDIS_PASSWORD=null
        REDIS_PORT=6379
        MAIL_MAILER=smtp
        MAIL_HOST=mailpit
        MAIL_PORT=1025
        MAIL_USERNAME=null
        MAIL_PASSWORD=null
        MAIL_ENCRYPTION=null
        MAIL_FROM_ADDRESS="acc@example.com"
        MAIL_FROM_NAME="${APP_NAME}"
        VITE_APP_NAME="${APP_NAME}"
        EOF

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Deploy to Acceptance
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Starting Acceptance Deployment..."
          cd ${{ secrets.DEPLOY_PATH }}/acceptance
          git pull origin main
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan optimize
          chmod -R 755 storage bootstrap/cache
          chmod -R 775 storage/logs
          chmod -R 775 storage/framework/cache
          chmod -R 775 storage/framework/sessions
          chmod -R 775 storage/framework/views
          php artisan storage:link
          echo "Acceptance deployment completed successfully!"

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, openssl, tokenizer, json, bcmath, fileinfo
        coverage: none

    - name: Create .env file for production
      run: |
        cat > .env << 'EOF'
        APP_NAME="Collection Manager"
        APP_ENV=production
        APP_KEY=
        APP_DEBUG=false
        APP_URL=http://localhost
        LOG_CHANNEL=stack
        LOG_DEPRECATIONS_CHANNEL=null
        LOG_LEVEL=debug
        DB_CONNECTION=mysql
        DB_HOST=${{ secrets.SSH_HOST }}
        DB_PORT=3306
        DB_DATABASE=collection_manager_production
        DB_USERNAME=${{ secrets.SSH_USER }}
        DB_PASSWORD=password
        BROADCAST_DRIVER=log
        CACHE_DRIVER=file
        FILESYSTEM_DISK=local
        QUEUE_CONNECTION=sync
        SESSION_DRIVER=file
        SESSION_LIFETIME=120
        MEMCACHED_HOST=127.0.0.1
        REDIS_HOST=127.0.0.1
        REDIS_PASSWORD=null
        REDIS_PORT=6379
        MAIL_MAILER=smtp
        MAIL_HOST=mailpit
        MAIL_PORT=1025
        MAIL_USERNAME=null
        MAIL_PASSWORD=null
        MAIL_ENCRYPTION=null
        MAIL_FROM_ADDRESS="noreply@example.com"
        MAIL_FROM_NAME="${APP_NAME}"
        VITE_APP_NAME="${APP_NAME}"
        EOF

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Optimize for production
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
        php artisan optimize

    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Starting Production Deployment..."
          cd ${{ secrets.DEPLOY_PATH }}/production
          git pull origin main
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan optimize
          chmod -R 755 storage bootstrap/cache
          chmod -R 775 storage/logs
          chmod -R 775 storage/framework/cache
          chmod -R 775 storage/framework/sessions
          chmod -R 775 storage/framework/views
          php artisan storage:link
          echo "Production deployment completed successfully!"

    - name: Deploy to Production via FTP
      if: secrets.PROD_FTP_SERVER != '' && secrets.PROD_FTP_USERNAME != '' && secrets.PROD_FTP_PASSWORD != '' && secrets.PROD_FTP_SERVER_DIR != ''
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.PROD_FTP_SERVER }}
        username: ${{ secrets.PROD_FTP_USERNAME }}
        password: ${{ secrets.PROD_FTP_PASSWORD }}
        local-dir: ./
        server-dir: ${{ secrets.PROD_FTP_SERVER_DIR }}
        exclude: |
          **/.git*
          **/.git*/
          **/node_modules/**
          **/tests/**
          **/.github/**
          **/deploy.sh
          **/deploy-ovh.sh
          **/.env.example
          **/README.md
          **/README_STAP5.md
          **/DEPLOYMENT_OVH.md
          **/OVH_DEPLOYMENT_SUMMARY.md
          **/vendor/**
        dangerous-clean-slate: true

 